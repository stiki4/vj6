using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _15_Rezervacija_sobe
{
    public class HotelskaSoba
    {

        public int OznakaSobe { get; set; }

        public int Kapacitet { get; set; }

        public HotelskaSoba(int oznakaSobe, int kapacitet)
        {
            OznakaSobe = oznakaSobe;
            Kapacitet = kapacitet;

        }

    }
}

namespace _15_Rezervacija_sobe
{
    internal static class Program
    {
        /// <summary>
        ///  The main entry point for the application.
        /// </summary>
        [STAThread]
        static void Main()
        {
            // To customize application configuration such as set high DPI settings or default font,
            // see https://aka.ms/applicationconfiguration.
            ApplicationConfiguration.Initialize();
            Application.Run(new Form1());
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _15_Rezervacija_sobe
{
    public class Recepcija
    {
        public Hotel hotel = new Hotel();

        public List<Rezervacija> ListaRezervacija = new List<Rezervacija>();

        public List<HotelskaSoba> DohvatiSlobodneSobe (DateTime datum)
        {
            List<HotelskaSoba> slobodneSobe = new List<HotelskaSoba>();

            

            foreach (var item in hotel.DohvatiSveSobe())
            {
                bool slobodna = true;

                foreach (var rezervacija in ListaRezervacija)
                {
                    if (rezervacija.DatumRezervacije == datum && rezervacija.Soba.OznakaSobe == item.OznakaSobe)
                    {
                        slobodna = false;
                        //break;
                    } 
                }
            if (slobodna)
                {
                    slobodneSobe.Add(item);
                }
            }
            
            return slobodneSobe;
        }

        public void Rezerviraj(HotelskaSoba soba, DateTime datum)
        {
            Rezervacija novaRezervacija = new Rezervacija(soba, datum);
            ListaRezervacija.Add(novaRezervacija);
            
        }




    }
}
    
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _15_Rezervacija_sobe
{
    public class Rezervacija
    {

        public HotelskaSoba Soba { get; set; }

        public DateTime DatumRezervacije { get; set; }

        public Rezervacija(HotelskaSoba soba, DateTime datumRezervacije)
        {
            Soba = soba;
            DatumRezervacije = datumRezervacije;
        }
    }
}

namespace _15_Rezervacija_sobe
{
    public partial class Form1 : Form
    {
        Recepcija recepcija = new Recepcija();

        public Form1()
        {
            InitializeComponent();
        }

        private void btnPrikaziSlobodneSobe_Click(object sender, EventArgs e)
        {
            dgvSlobodneSobe.DataSource = recepcija.DohvatiSlobodneSobe(dtpDatum.Value);
        }

        private void btnRezerviraj_Click(object sender, EventArgs e)
        {
            HotelskaSoba soba = dgvSlobodneSobe.CurrentRow.DataBoundItem as HotelskaSoba;
            recepcija.Rezerviraj(soba, dtpDatum.Value);
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _15_Rezervacija_sobe
{
    public class Hotel
    {
        public List<HotelskaSoba> SveSobe { get; set; }

        public Hotel()
        {
            SveSobe = new List<HotelskaSoba>();
            SveSobe.Add(new HotelskaSoba(501, 3));
            SveSobe.Add(new HotelskaSoba(502, 2));
            SveSobe.Add(new HotelskaSoba(503, 5));
            SveSobe.Add(new HotelskaSoba(504, 2));
        }



        public List<HotelskaSoba> DohvatiSveSobe()
        {
            return SveSobe;
        }
    }
}
